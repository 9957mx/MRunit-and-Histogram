package mrtest;

import java.io.IOException;

import org.Histogram.HistogramMapper;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mrunit.mapreduce.MapDriver;
import org.junit.Test;

public class NumberTest {

   @Test
   public void parsesValidRecord() {
      MapDriver<LongWritable, Text, IntWritable, IntWritable> mapDriver;
      HistogramMapper mapper = new HistogramMapper();
      mapDriver = MapDriver.newMapDriver(mapper);
      LongWritable p = new LongWritable(0);
      mapDriver.withInput(p, new Text("1 3 5 20 28 34 23 5 6 4"));
      
      mapDriver.withOutput(new IntWritable(1), new IntWritable(1));
      mapDriver.withOutput(new IntWritable(3), new IntWritable(1));
      mapDriver.withOutput(new IntWritable(5), new IntWritable(1));
      mapDriver.withOutput(new IntWritable(20), new IntWritable(1));
      mapDriver.withOutput(new IntWritable(28), new IntWritable(1));
      mapDriver.withOutput(new IntWritable(34), new IntWritable(1));
      mapDriver.withOutput(new IntWritable(23), new IntWritable(1));
      mapDriver.withOutput(new IntWritable(5), new IntWritable(1));
      mapDriver.withOutput(new IntWritable(6), new IntWritable(1));
      mapDriver.withOutput(new IntWritable(4), new IntWritable(1));
      
      try {
         mapDriver.runTest();
      } catch (IOException e) {
         e.printStackTrace();
      }
   }
   
   @Test
      public void parsesMalformedPixelValue() {
         MapDriver<LongWritable, Text, IntWritable, IntWritable> mapDriver;
         HistogramMapper mapper = new HistogramMapper();
         mapDriver = MapDriver.newMapDriver(mapper);
         LongWritable p = new LongWritable(0);
         mapDriver.withInput(p, new Text("1 3 -5 7 9 3 4 4 5 6"));
         
         mapDriver.withOutput(new IntWritable(1), new IntWritable(1));
         mapDriver.withOutput(new IntWritable(3), new IntWritable(1));
         mapDriver.withOutput(new IntWritable(7), new IntWritable(1));
         mapDriver.withOutput(new IntWritable(9), new IntWritable(1));
         mapDriver.withOutput(new IntWritable(3), new IntWritable(1));
         mapDriver.withOutput(new IntWritable(4), new IntWritable(1));
         mapDriver.withOutput(new IntWritable(4), new IntWritable(1));
         mapDriver.withOutput(new IntWritable(5), new IntWritable(1));
         mapDriver.withOutput(new IntWritable(6), new IntWritable(1));
         try {
            mapDriver.runTest();
         } catch (IOException e) {
            e.printStackTrace();
         }
      }
      
}
    
